
how to prevent sql injection
review security
fix logout button to redirect to login page not admin page

need to add in some sort of help page with the email etc maybe set up some guides in there or faqs
<footer>
        <p>Contact for help: <a href="mailto:admin@example.com">admin@example.com</a></p>
        <!-- Created footer a in styles.css to handle style of this email address -->
    </footer>

# This is used by the manager view due to the issues with having different POST data on the pages
@login_required
def cancel_leave_request_from_manage(request, request_id):
    # Fetch the leave request object
    leave_request = get_object_or_404(LeaveRequest, id=request_id)

    # Check if the user is authorized to cancel the request
    if request.user != leave_request.user and not request.user.userprofile.is_manager:
        return JsonResponse({'status': 'error', 'message': 'Unauthorized'}, status=403)

    # Check if the request can be cancelled
    if leave_request.status not in ['Pending', 'Approved'] or timezone.now().date() >= leave_request.start_date:
        return JsonResponse({'status': 'error', 'message': 'Request cannot be cancelled'}, status=400)

    # Perform the cancellation
    leave_request.status = 'Cancelled'
    leave_request.save()

    # Remove corresponding AttendanceRecord entries
    AttendanceRecord.objects.filter(user=leave_request.user, date__range=[leave_request.start_date, leave_request.end_date]).delete()

    return JsonResponse({'status': 'success', 'message': 'Leave request cancelled successfully'})


# Managers can delete requests, will be particularly useful if the front-end and server-logic
# fails to stop the submission of duplicate requests.
@login_required
def delete_leave_request(request, request_id):
    if not request.user.userprofile.is_manager:
        return JsonResponse({'status': 'error', 'message': 'Unauthorized'}, status=403)

    leave_request = get_object_or_404(LeaveRequest, id=request_id)
    leave_request.delete()

    return JsonResponse({'status': 'success', 'message': 'Request deleted successfully'})
